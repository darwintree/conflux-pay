// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders/summary/{trade_no}": {
            "get": {
                "description": "query order summary by trade no",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "query order summary by trade no",
                "operationId": "QueryOrderSummary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trade no",
                        "name": "trade_no",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/orders/wechat": {
            "post": {
                "description": "make order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Make Order",
                "operationId": "MakeOrder",
                "parameters": [
                    {
                        "description": "make_wechat_order_req",
                        "name": "make_ord_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.MakeOrderReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/orders/wechat/close/{trade_no}": {
            "put": {
                "description": "close order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "close order",
                "operationId": "Close",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trade no",
                        "name": "trade_no",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WechatOrderDetail"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/orders/wechat/refresh-url/{trade_no}": {
            "put": {
                "description": "refresh pay url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "refresh pay url",
                "operationId": "RefreshPayUrl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trade no",
                        "name": "trade_no",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.MakeOrderResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/orders/wechat/refund/{trade_no}": {
            "put": {
                "description": "refund pay",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "refund pay",
                "operationId": "Refund",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trade no",
                        "name": "trade_no",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "refund_req",
                        "name": "refund_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.RefundReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "refund_detail",
                        "schema": {
                            "$ref": "#/definitions/models.WechatRefundDetail"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    }
                }
            }
        },
        "/orders/wechat/{trade_no}": {
            "get": {
                "description": "query order by trade no",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "query order by trade no",
                "operationId": "QueryWechatOrderDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trade no",
                        "name": "trade_no",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WechatOrderDetail"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/cns_errors.RainbowErrorDetailInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cns_errors.RainbowErrorDetailInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "单位为分",
                    "type": "integer"
                },
                "app_name": {
                    "type": "string"
                },
                "app_pay_notify_url": {
                    "description": "上层应用通知url",
                    "type": "string"
                },
                "app_refund_notify_url": {
                    "description": "上层应用通知url",
                    "type": "string"
                },
                "code_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "h5_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_pay_notify_completed": {
                    "type": "boolean"
                },
                "is_refund_notify_completed": {
                    "type": "boolean"
                },
                "pay_notify_count": {
                    "description": "PayNotifyNextTime    *time.Time ` + "`" + `json:\"pay_notify_next_time\"` + "`" + `",
                    "type": "integer"
                },
                "refund_notify_count": {
                    "description": "RefundNotifyNextTime    *time.Time ` + "`" + `json:\"refund_notify_next_time\"` + "`" + `",
                    "type": "integer"
                },
                "refund_state": {
                    "type": "string"
                },
                "time_expire": {
                    "type": "string"
                },
                "trade_no": {
                    "type": "string"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_state": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.WechatOrderDetail": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "appid": {
                    "type": "string"
                },
                "attach": {
                    "type": "string"
                },
                "bank_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "mchid": {
                    "type": "string"
                },
                "payer": {
                    "type": "string"
                },
                "refresh_status": {
                    "type": "string"
                },
                "refund_no": {
                    "type": "string"
                },
                "success_time": {
                    "type": "string"
                },
                "trade_no": {
                    "type": "string"
                },
                "trade_state": {
                    "type": "string"
                },
                "trade_state_desc": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.WechatRefundDetail": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "金额详细信息",
                    "type": "integer"
                },
                "channel": {
                    "description": "枚举值： - ORIGINAL—原路退款 - BALANCE—退回到余额 - OTHER_BALANCE—原账户异常退到其他余额账户 - OTHER_BANKCARD—原银行卡异常退到其他银行卡 * ` + "`" + `ORIGINAL` + "`" + ` - 原路退款 * ` + "`" + `BALANCE` + "`" + ` - 退回到余额 * ` + "`" + `OTHER_BALANCE` + "`" + ` - 原账户异常退到其他余额账户 * ` + "`" + `OTHER_BANKCARD` + "`" + ` - 原银行卡异常退到其他银行卡",
                    "type": "string"
                },
                "create_time": {
                    "description": "退款受理时间，遵循rfc3339标准格式，格式为YYYY-MM-DDTHH:mm:ss+TIMEZONE，YYYY-MM-DD表示年月日，T出现在字符串中，表示time元素的开头，HH:mm:ss表示时分秒，TIMEZONE表示时区（+08:00表示东八区时间，领先UTC 8小时，即北京时间）。例如：2015-05-20T13:29:35+08:00表示，北京时间2015年5月20日13点29分35秒。",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "funds_account": {
                    "description": "退款所使用资金对应的资金账户类型 枚举值： - UNSETTLED : 未结算资金 - AVAILABLE : 可用余额 - UNAVAILABLE : 不可用余额 - OPERATION : 运营户 - BASIC : 基本账户（含可用余额和不可用余额） * ` + "`" + `UNSETTLED` + "`" + ` - 未结算资金 * ` + "`" + `AVAILABLE` + "`" + ` - 可用余额 * ` + "`" + `UNAVAILABLE` + "`" + ` - 不可用余额 * ` + "`" + `OPERATION` + "`" + ` - 运营户 * ` + "`" + `BASIC` + "`" + ` - 基本账户（含可用余额和不可用余额）",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "out_refund_no": {
                    "description": "商户系统内部的退款单号，商户系统内部唯一，只能是数字、大小写字母_-|*@ ，同一退款单号多次请求只退一笔。",
                    "type": "string"
                },
                "out_trade_no": {
                    "description": "原支付交易对应的商户订单号",
                    "type": "string"
                },
                "refund_id": {
                    "type": "string"
                },
                "status": {
                    "description": "退款到银行发现用户的卡作废或者冻结了，导致原路退款银行卡失败，可前往商户平台（pay.weixin.qq.com）-交易中心，手动处理此笔退款。 枚举值： - SUCCESS—退款成功 - CLOSED—退款关闭 - PROCESSING—退款处理中 - ABNORMAL—退款异常 * ` + "`" + `SUCCESS` + "`" + ` - 退款成功 * ` + "`" + `CLOSED` + "`" + ` - 退款关闭 * ` + "`" + `PROCESSING` + "`" + ` - 退款处理中 * ` + "`" + `ABNORMAL` + "`" + ` - 退款异常",
                    "type": "string"
                },
                "success_time": {
                    "description": "退款成功时间，退款状态status为SUCCESS（退款成功）时，返回该字段。遵循rfc3339标准格式，格式为YYYY-MM-DDTHH:mm:ss+TIMEZONE，YYYY-MM-DD表示年月日，T出现在字符串中，表示time元素的开头，HH:mm:ss表示时分秒，TIMEZONE表示时区（+08:00表示东八区时间，领先UTC 8小时，即北京时间）。例如：2015-05-20T13:29:35+08:00表示，北京时间2015年5月20日13点29分35秒。",
                    "type": "string"
                },
                "transaction_id": {
                    "description": "微信支付交易订单号",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_received_account": {
                    "description": "取当前退款单的退款入账方，有以下几种情况： 1）退回银行卡：{银行名称}{卡类型}{卡尾号} 2）退回支付用户零钱:支付用户零钱 3）退还商户:商户基本账户商户结算银行账户 4）退回支付用户零钱通:支付用户零钱通",
                    "type": "string"
                }
            }
        },
        "services.MakeOrderReq": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "time_expire",
                "trade_type"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "notify_url": {
                    "type": "string"
                },
                "time_expire": {
                    "type": "integer"
                },
                "trade_type": {
                    "type": "string"
                }
            }
        },
        "services.MakeOrderResp": {
            "type": "object",
            "properties": {
                "code_url": {
                    "type": "string"
                },
                "h5_url": {
                    "type": "string"
                },
                "trade_no": {
                    "type": "string"
                },
                "trade_provider": {
                    "type": "string"
                },
                "trade_type": {
                    "type": "string"
                }
            }
        },
        "services.RefundReq": {
            "type": "object",
            "required": [
                "reason"
            ],
            "properties": {
                "notify_url": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8080",
	BasePath:         "/v0",
	Schemes:          []string{"http", "https"},
	Title:            "Rainbow-API",
	Description:      "Conflux-Pay API documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
